env:
  GO111MODULE: "on"
  GOFLAGS: "-mod=mod"
  CGO_ENABLED: "0"
  BUILDKITE_ARTIFACT_UPLOAD_DESTINATION: "s3://buildkite-artifacts/$BUILDKITE_PIPELINE_SLUG/$BUILDKITE_BUILD_NUMBER"
  TAG: ${BUILDKITE_COMMIT:0:7}
  ARCH: "linux/arm64"

steps:
  - label: ":wrench: Setup Environment"
    command: |
      echo "--- Setting up build environment"
      echo "Build number: $BUILDKITE_BUILD_NUMBER"
      echo "Commit: $BUILDKITE_COMMIT"
      echo "Tag: $TAG"
      echo "Architecture: $ARCH"

  - label: ":docker: Build and Test"
    command: .buildkite/steps/02_compose_build.sh
        source build.env
        set +a
      fi
      .buildkite/steps/02_compose_build.sh
    artifact_paths:
      - build.env

  - label: ":go: Test Services"
    command: |
      # Load build environment
      if [ -f build.env ]; then
        set -a
        source build.env
        set +a
      fi
      .buildkite/steps/03_tests.sh
    artifact_paths:
      - build.env

  - label: ":package: Build k8s images for Minikube"
    command: |
      # Load build environment
      if [ -f build.env ]; then
        set -a
        source build.env
        set +a
      fi
      .buildkite/steps/04_build_images.sh
    artifact_paths:
      - build.env

  - label: ":minikube: Load images into cluster"
    command: |
      # Load build environment
      if [ -f build.env ]; then
        set -a
        source build.env
        set +a
      fi
      .buildkite/steps/05_minikube_load.sh
    artifact_paths:
      - build.env

  - label: ":kubernetes: Deploy (no registry)"
    command: |
      # Load build environment
      if [ -f build.env ]; then
        set -a
        source build.env
        set +a
      fi
      .buildkite/steps/06_deploy.sh
